from django import forms
from django.contrib.auth.forms import UserCreationForm, AuthenticationForm
from django.contrib.auth.models import User
from .models import Transaction, Category, UserProfile

class CustomUserCreationForm(UserCreationForm):
    email = forms.EmailField(required=True, label='‡∏≠‡∏µ‡πÄ‡∏°‡∏•')
    first_name = forms.CharField(max_length=30, required=True, label='‡∏ä‡∏∑‡πà‡∏≠')
    last_name = forms.CharField(max_length=30, required=True, label='‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•')
    
    class Meta:
        model = User
        fields = ('username', 'email', 'first_name', 'last_name', 'password1', 'password2')
        labels = {
            'username': '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
        }
        
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for field_name, field in self.fields.items():
            field.widget.attrs['class'] = 'form-control'
            
        self.fields['username'].widget.attrs.update({'placeholder': '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ'})
        self.fields['email'].widget.attrs.update({'placeholder': '‡∏≠‡∏µ‡πÄ‡∏°‡∏•'})
        self.fields['first_name'].widget.attrs.update({'placeholder': '‡∏ä‡∏∑‡πà‡∏≠'})
        self.fields['last_name'].widget.attrs.update({'placeholder': '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•'})
        self.fields['password1'].widget.attrs.update({'placeholder': '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'})
        self.fields['password2'].widget.attrs.update({'placeholder': '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'})

class CustomAuthenticationForm(AuthenticationForm):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['username'].widget.attrs.update({
            'class': 'form-control',
            'placeholder': '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ'
        })
        self.fields['password'].widget.attrs.update({
            'class': 'form-control',
            'placeholder': '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'
        })
        self.fields['username'].label = '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ'
        self.fields['password'].label = '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô'

class UserProfileForm(forms.ModelForm):
    class Meta:
        model = UserProfile
        fields = ['phone', 'date_of_birth']
        labels = {
            'phone': '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå',
            'date_of_birth': '‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î',
        }
        widgets = {
            'date_of_birth': forms.DateInput(attrs={'type': 'date'}),
        }
        
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for field_name, field in self.fields.items():
            field.widget.attrs['class'] = 'form-control'

class UserUpdateForm(forms.ModelForm):
    class Meta:
        model = User
        fields = ['first_name', 'last_name', 'email']
        labels = {
            'first_name': '‡∏ä‡∏∑‡πà‡∏≠',
            'last_name': '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•',
            'email': '‡∏≠‡∏µ‡πÄ‡∏°‡∏•',
        }
        
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for field_name, field in self.fields.items():
            field.widget.attrs['class'] = 'form-control'

class TransactionForm(forms.ModelForm):
    class Meta:
        model = Transaction
        fields = ['category', 'title', 'description', 'amount', 'date', 'notes']
        labels = {
            'category': '‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà',
            'title': '‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£',
            'description': '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
            'amount': '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô',
            'date': '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà',
            'notes': '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏',
        }
        widgets = {
            'date': forms.DateInput(attrs={'type': 'date'}),
            'description': forms.Textarea(attrs={'rows': 3}),
            'notes': forms.Textarea(attrs={'rows': 2}),
        }
        
    def __init__(self, *args, **kwargs):
        user = kwargs.pop('user', None)
        transaction_type = kwargs.pop('transaction_type', None)
        super().__init__(*args, **kwargs)
        
        for field_name, field in self.fields.items():
            field.widget.attrs['class'] = 'form-control'
            
        if user and transaction_type:
            self.fields['category'].queryset = Category.objects.filter(
                user=user, 
                type=transaction_type
            )
            
        self.fields['title'].widget.attrs.update({'placeholder': '‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'})
        self.fields['description'].widget.attrs.update({'placeholder': '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)'})
        self.fields['amount'].widget.attrs.update({'placeholder': '0.00'})
        self.fields['notes'].widget.attrs.update({'placeholder': '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)'})

class CategoryForm(forms.ModelForm):
    class Meta:
        model = Category
        fields = ['name', 'type', 'icon', 'color']
        labels = {
            'name': '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà',
            'type': '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó',
            'icon': '‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô',
            'color': '‡∏™‡∏µ',
        }
        widgets = {
            'color': forms.TextInput(attrs={'type': 'color'}),
        }
        
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        for field_name, field in self.fields.items():
            field.widget.attrs['class'] = 'form-control'
            
        self.fields['name'].widget.attrs.update({'placeholder': '‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà'})
        self.fields['icon'].widget.attrs.update({'placeholder': 'üí∞'})